DONE-Convert concepts to an integer ID, dictionary lookup
DONE-Convert problems to an integer ID, dictionary lookup
DONE-Convert units to an integer ID, dictionary lookup
DONE -Convert student IDs to an integer ID, dictionary lookup
DONE-Check if multiple skill problems have multiple opportunities associated.

	NOTE: Appears to be working,but NOTE: Some entries have been intentionally removed - they are in the test set!
DONE-IMPORTANT: Check if opportunity and skills match up (the student indeed has seen this skill the number of times opportunity tells us.)


-Write a function to return a given row as a list

Once the following are done, we should have a decent handle on which features are important:
DONE-Make decision tree to see what features best predict first correct
-HMM to learn this itself


	There exists students and skills that are in test set, but NOT in the training set
-Decide whether we want to go by individual students, by skills, by unit/section/problem, etc.



We need to find features for the HMM to operate on. HMM can run on y output, but since there are only two states, not very interesting.
DTree - Step duration seems pretty effective in predicting a first correct, but step duration is not given in the test set!


MUST find important features in the training set to train our emit, trans, start probabilities on. KEEP IN MIND there are holes in the training set!

We then desire to use the HMM states as features in a decision tree to predict if the student gets a first correct


POSTER to do:
-Find features worth traning our HMM on - step duration?
-Create HMM's for each skill, for each student
-Use HMM states to train a DTree



Poster outline:
Data intro
Method - description of HMM, DTree, why we want to use them, how they work on set

Results...
